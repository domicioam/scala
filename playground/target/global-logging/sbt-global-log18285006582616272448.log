[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 16.0.2)
[debug] Load.defaultLoad until apply took 468.721218ms
[debug]           Load.loadUnit: plugins took 82.822511ms
[debug]           Load.loadUnit: defsScala took 0.300298ms
[debug] [Loading] Scanning directory /home/domicio/source/scala/playground/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/domicio/source/scala/playground/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.786048 ms
[debug]               Load.resolveProject(playground-build) took 42.705274ms
[debug]             Load.loadTransitive: finalizeProject(Project(id playground-build, base: /home/domicio/source/scala/playground/project, plugins: List(<none>))) took 89.01126ms
[debug] [Loading] Done in /home/domicio/source/scala/playground/project, returning: (playground-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 109.099239ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.225978ms
[debug]         Load.loadUnit(file:/home/domicio/source/scala/playground/project/, ...) took 198.035628ms
[debug]       Load.apply: load took 390.679043ms
[debug]       Load.apply: resolveProjects took 4.929617ms
[debug]       Load.apply: finalTransforms took 58.990077ms
[debug]       Load.apply: config.delegates took 6.391153ms
[debug]       Load.apply: Def.make(settings)... took 389.644515ms
[debug]       Load.apply: structureIndex took 116.735618ms
[debug]       Load.apply: mkStreams took 2.076389ms
[info] loading project definition from /home/domicio/source/scala/playground/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3390.501648ms
[debug]     Load.loadUnit: defsScala took 0.004097ms
[debug] [Loading] Scanning directory /home/domicio/source/scala/playground
[debug]       Load.loadUnit: mkEval took 4.078427ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/domicio/source/scala/playground, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.459313 ms
[info] loading settings for project playground from build.sbt ...
[debug]         Load.resolveProject(playground) took 2.810087ms
[debug]       Load.loadTransitive: finalizeProject(Project(id playground, base: /home/domicio/source/scala/playground, plugins: List(<none>))) took 5.918278ms
[debug] [Loading] Done in /home/domicio/source/scala/playground, returning: (playground)
[debug]     Load.loadUnit: loadedProjectsRaw took 2018.657701ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.943149ms
[debug]   Load.loadUnit(file:/home/domicio/source/scala/playground/, ...) took 5413.828713ms
[debug] Load.apply: load took 5431.908202ms
[debug] Load.apply: resolveProjects took 0.140375ms
[debug] Load.apply: finalTransforms took 14.004117ms
[debug] Load.apply: config.delegates took 0.556624ms
[debug] Load.apply: Def.make(settings)... took 85.754628ms
[debug] Load.apply: structureIndex took 31.566508ms
[debug] Load.apply: mkStreams took 0.004499ms
[info] set current project to playground (in build file:/home/domicio/source/scala/playground/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/domicio/.sbt/1.0/server/190a8320495b74756c3b/sock
[debug] Writing bsp connection file
[info] started sbt server
